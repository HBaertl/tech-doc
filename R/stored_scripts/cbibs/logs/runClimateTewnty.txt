12:38:06,988 root DEBUG First Date 2020-01-01 00:00:00
12:38:06,988 root DEBUG Last Date 2021-01-01 00:00:00
12:38:07,601 root DEBUG 2010-01-01 00:00:00 to 2010-12-31 23:59:59 
12:38:07,612 root DEBUG 2011-01-01 00:00:00 to 2011-12-31 23:59:59 
12:38:07,613 root DEBUG 2012-01-01 00:00:00 to 2012-12-31 23:59:59 
12:38:07,613 root DEBUG 2013-01-01 00:00:00 to 2013-12-31 23:59:59 
12:38:07,614 root DEBUG 2014-01-01 00:00:00 to 2014-12-31 23:59:59 
12:38:07,614 root DEBUG 2015-01-01 00:00:00 to 2015-12-31 23:59:59 
12:38:07,615 root DEBUG 2016-01-01 00:00:00 to 2016-12-31 23:59:59 
12:38:07,616 root DEBUG 2017-01-01 00:00:00 to 2017-12-31 23:59:59 
12:38:07,616 root DEBUG 2018-01-01 00:00:00 to 2018-12-31 23:59:59 
12:38:07,617 root DEBUG 2019-01-01 00:00:00 to 2019-12-31 23:59:59 
12:39:47,206 root DEBUG First Date 2020-01-01 00:00:00
12:39:47,206 root DEBUG Last Date 2021-01-01 00:00:00
12:39:47,299 root DEBUG 2010-01-01 00:00:00 to 2010-12-31 23:59:59 
12:39:47,299 root DEBUG 2011-01-01 00:00:00 to 2011-12-31 23:59:59 
12:39:47,300 root DEBUG 2012-01-01 00:00:00 to 2012-12-31 23:59:59 
12:39:47,301 root DEBUG 2013-01-01 00:00:00 to 2013-12-31 23:59:59 
12:39:47,301 root DEBUG 2014-01-01 00:00:00 to 2014-12-31 23:59:59 
12:39:47,301 root DEBUG 2015-01-01 00:00:00 to 2015-12-31 23:59:59 
12:39:47,302 root DEBUG 2016-01-01 00:00:00 to 2016-12-31 23:59:59 
12:39:47,302 root DEBUG 2017-01-01 00:00:00 to 2017-12-31 23:59:59 
12:39:47,303 root DEBUG 2018-01-01 00:00:00 to 2018-12-31 23:59:59 
12:39:47,303 root DEBUG 2019-01-01 00:00:00 to 2019-12-31 23:59:59 
12:41:32,261 root DEBUG First Date 2020-01-01 00:00:00
12:41:32,261 root DEBUG Last Date 2021-01-01 00:00:00
12:41:54,85 root DEBUG 2010-01-01 00:00:00 to 2010-12-31 23:59:59 
12:41:54,86 root DEBUG 2011-01-01 00:00:00 to 2011-12-31 23:59:59 
12:41:54,87 root DEBUG 2012-01-01 00:00:00 to 2012-12-31 23:59:59 
12:41:54,89 root DEBUG 2013-01-01 00:00:00 to 2013-12-31 23:59:59 
12:41:54,90 root DEBUG 2014-01-01 00:00:00 to 2014-12-31 23:59:59 
12:41:54,91 root DEBUG 2015-01-01 00:00:00 to 2015-12-31 23:59:59 
12:41:54,92 root DEBUG 2016-01-01 00:00:00 to 2016-12-31 23:59:59 
12:41:54,93 root DEBUG 2017-01-01 00:00:00 to 2017-12-31 23:59:59 
12:41:54,94 root DEBUG 2018-01-01 00:00:00 to 2018-12-31 23:59:59 
12:41:54,95 root DEBUG 2019-01-01 00:00:00 to 2019-12-31 23:59:59 
12:42:50,970 root DEBUG First Date 2020-01-01 00:00:00
12:42:50,970 root DEBUG Last Date 2021-01-01 00:00:00
12:42:51,152 root DEBUG 2010-01-01 00:00:00 to 2010-12-31 23:59:59 
12:42:51,153 root DEBUG 2011-01-01 00:00:00 to 2011-12-31 23:59:59 
12:42:51,153 root DEBUG 2012-01-01 00:00:00 to 2012-12-31 23:59:59 
12:42:51,154 root DEBUG 2013-01-01 00:00:00 to 2013-12-31 23:59:59 
12:42:51,155 root DEBUG 2014-01-01 00:00:00 to 2014-12-31 23:59:59 
12:42:51,157 root DEBUG 2015-01-01 00:00:00 to 2015-12-31 23:59:59 
12:42:51,159 root DEBUG 2016-01-01 00:00:00 to 2016-12-31 23:59:59 
12:42:51,159 root DEBUG 2017-01-01 00:00:00 to 2017-12-31 23:59:59 
12:42:51,160 root DEBUG 2018-01-01 00:00:00 to 2018-12-31 23:59:59 
12:42:51,161 root DEBUG 2019-01-01 00:00:00 to 2019-12-31 23:59:59 
12:43:30,335 root DEBUG First Date 2020-01-01 00:00:00
12:43:30,335 root DEBUG Last Date 2021-01-01 00:00:00
12:43:30,429 root DEBUG 2010-01-01 00:00:00 to 2010-12-31 23:59:59 
12:43:30,430 root DEBUG 2011-01-01 00:00:00 to 2011-12-31 23:59:59 
12:43:30,430 root DEBUG 2012-01-01 00:00:00 to 2012-12-31 23:59:59 
12:43:30,431 root DEBUG 2013-01-01 00:00:00 to 2013-12-31 23:59:59 
12:43:30,431 root DEBUG 2014-01-01 00:00:00 to 2014-12-31 23:59:59 
12:43:30,432 root DEBUG 2015-01-01 00:00:00 to 2015-12-31 23:59:59 
12:43:30,432 root DEBUG 2016-01-01 00:00:00 to 2016-12-31 23:59:59 
12:43:30,432 root DEBUG 2017-01-01 00:00:00 to 2017-12-31 23:59:59 
12:43:30,433 root DEBUG 2018-01-01 00:00:00 to 2018-12-31 23:59:59 
12:43:30,433 root DEBUG 2019-01-01 00:00:00 to 2019-12-31 23:59:59 
12:44:24,156 root DEBUG First Date 2020-01-01 00:00:00
12:44:24,156 root DEBUG Last Date 2021-01-01 00:00:00
12:44:24,250 root DEBUG 2010-01-01 00:00:00 to 2010-12-31 23:59:59 
12:44:24,251 root DEBUG 2011-01-01 00:00:00 to 2011-12-31 23:59:59 
12:44:24,251 root DEBUG 2012-01-01 00:00:00 to 2012-12-31 23:59:59 
12:44:24,252 root DEBUG 2013-01-01 00:00:00 to 2013-12-31 23:59:59 
12:44:24,252 root DEBUG 2014-01-01 00:00:00 to 2014-12-31 23:59:59 
12:44:24,253 root DEBUG 2015-01-01 00:00:00 to 2015-12-31 23:59:59 
12:44:24,254 root DEBUG 2016-01-01 00:00:00 to 2016-12-31 23:59:59 
12:44:24,254 root DEBUG 2017-01-01 00:00:00 to 2017-12-31 23:59:59 
12:44:24,255 root DEBUG 2018-01-01 00:00:00 to 2018-12-31 23:59:59 
12:44:24,255 root DEBUG 2019-01-01 00:00:00 to 2019-12-31 23:59:59 
12:44:24,257 root WARNING No data from the database
12:44:49,846 root DEBUG First Date 2020-01-01 00:00:00
12:44:49,846 root DEBUG Last Date 2021-01-01 00:00:00
12:45:14,778 root DEBUG 2010-01-01 00:00:00 to 2010-12-31 23:59:59 
12:45:18,676 root DEBUG 2011-01-01 00:00:00 to 2011-12-31 23:59:59 
12:45:20,591 root DEBUG 2012-01-01 00:00:00 to 2012-12-31 23:59:59 
12:46:52,273 root DEBUG First Date 2020-01-01 00:00:00
12:46:52,273 root DEBUG Last Date 2021-01-01 00:00:00
12:46:52,594 root DEBUG 2010-01-01 00:00:00 to 2010-12-31 23:59:59 
12:46:53,178 root DEBUG 2011-01-01 00:00:00 to 2011-12-31 23:59:59 
12:46:53,547 root DEBUG 2012-01-01 00:00:00 to 2012-12-31 23:59:59 
12:46:53,714 root DEBUG 2013-01-01 00:00:00 to 2013-12-31 23:59:59 
12:46:53,863 root DEBUG 2014-01-01 00:00:00 to 2014-12-31 23:59:59 
12:46:54,4 root DEBUG 2015-01-01 00:00:00 to 2015-12-31 23:59:59 
12:46:54,146 root DEBUG 2016-01-01 00:00:00 to 2016-12-31 23:59:59 
12:46:54,309 root DEBUG 2017-01-01 00:00:00 to 2017-12-31 23:59:59 
12:46:54,450 root DEBUG 2018-01-01 00:00:00 to 2018-12-31 23:59:59 
12:46:55,94 root DEBUG 2019-01-01 00:00:00 to 2019-12-31 23:59:59 
12:46:57,328 root DEBUG ------------------getDatesFromClimate-----------------------------------------
12:46:57,328 root DEBUG Testing the dates
12:46:57,328 root DEBUG 2020-01-01 00:00:00+00:00
12:46:57,328 root DEBUG 2020-01-02 00:00:00+00:00
12:46:57,328 root DEBUG 2020-01-03 00:00:00+00:00
12:46:57,328 root DEBUG 2020-01-04 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-05 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-06 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-07 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-08 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-09 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-10 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-11 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-12 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-13 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-14 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-15 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-16 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-17 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-18 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-19 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-20 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-21 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-22 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-23 00:00:00+00:00
12:46:57,329 root DEBUG 2020-01-24 00:00:00+00:00
12:46:57,330 root DEBUG 2020-01-25 00:00:00+00:00
12:46:57,330 root DEBUG 2020-01-26 00:00:00+00:00
12:46:57,330 root DEBUG 2020-01-27 00:00:00+00:00
12:46:57,330 root DEBUG 2020-01-28 00:00:00+00:00
12:46:57,330 root DEBUG 2020-01-29 00:00:00+00:00
12:46:57,330 root DEBUG 2020-01-30 00:00:00+00:00
12:46:57,330 root DEBUG 2020-01-31 00:00:00+00:00
12:46:57,330 root DEBUG 2020-02-01 00:00:00+00:00
12:46:57,330 root DEBUG 2020-02-02 00:00:00+00:00
12:46:57,330 root DEBUG 2020-02-03 00:00:00+00:00
12:46:57,330 root DEBUG 2020-02-04 00:00:00+00:00
12:46:57,330 root DEBUG 2020-02-05 00:00:00+00:00
12:46:57,330 root DEBUG 2020-02-06 00:00:00+00:00
12:46:57,330 root DEBUG 2020-02-07 00:00:00+00:00
12:46:57,330 root DEBUG 2020-02-08 00:00:00+00:00
12:46:57,330 root DEBUG 2020-02-09 00:00:00+00:00
12:46:57,330 root DEBUG 2020-02-10 00:00:00+00:00
12:46:57,330 root DEBUG 2020-02-11 00:00:00+00:00
12:46:57,330 root DEBUG 2020-02-12 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-13 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-14 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-15 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-16 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-17 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-18 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-19 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-20 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-21 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-22 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-23 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-24 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-25 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-26 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-27 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-28 00:00:00+00:00
12:46:57,331 root DEBUG 2020-02-29 00:00:00+00:00
12:46:57,331 root DEBUG 2020-03-01 00:00:00+00:00
12:46:57,331 root DEBUG 2020-03-02 00:00:00+00:00
12:46:57,331 root DEBUG 2020-03-03 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-04 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-05 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-06 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-07 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-08 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-09 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-10 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-11 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-12 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-13 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-14 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-15 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-16 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-17 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-18 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-19 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-20 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-21 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-22 00:00:00+00:00
12:46:57,332 root DEBUG 2020-03-23 00:00:00+00:00
12:46:57,333 root DEBUG 2020-03-24 00:00:00+00:00
12:46:57,333 root DEBUG 2020-03-25 00:00:00+00:00
12:46:57,333 root DEBUG 2020-03-26 00:00:00+00:00
12:46:57,333 root DEBUG 2020-03-27 00:00:00+00:00
12:46:57,333 root DEBUG 2020-03-28 00:00:00+00:00
12:46:57,333 root DEBUG 2020-03-29 00:00:00+00:00
12:46:57,333 root DEBUG 2020-03-30 00:00:00+00:00
12:46:57,333 root DEBUG 2020-03-31 00:00:00+00:00
12:46:57,333 root DEBUG 2020-04-01 00:00:00+00:00
12:46:57,333 root DEBUG 2020-04-02 00:00:00+00:00
12:46:57,333 root DEBUG 2020-04-03 00:00:00+00:00
12:46:57,333 root DEBUG 2020-04-04 00:00:00+00:00
12:46:57,333 root DEBUG 2020-04-05 00:00:00+00:00
12:46:57,333 root DEBUG 2020-04-06 00:00:00+00:00
12:46:57,333 root DEBUG 2020-04-07 00:00:00+00:00
12:46:57,333 root DEBUG 2020-04-08 00:00:00+00:00
12:46:57,333 root DEBUG 2020-04-09 00:00:00+00:00
12:46:57,333 root DEBUG 2020-04-10 00:00:00+00:00
12:46:57,333 root DEBUG 2020-04-11 00:00:00+00:00
12:46:57,333 root DEBUG 2020-04-12 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-13 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-14 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-15 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-16 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-17 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-18 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-19 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-20 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-21 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-22 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-23 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-24 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-25 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-26 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-27 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-28 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-29 00:00:00+00:00
12:46:57,334 root DEBUG 2020-04-30 00:00:00+00:00
12:46:57,334 root DEBUG 2020-05-01 00:00:00+00:00
12:46:57,334 root DEBUG 2020-05-02 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-03 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-04 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-05 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-06 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-07 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-08 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-09 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-10 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-11 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-12 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-13 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-14 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-15 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-16 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-17 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-18 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-19 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-20 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-21 00:00:00+00:00
12:46:57,335 root DEBUG 2020-05-22 00:00:00+00:00
12:46:57,336 root DEBUG 2020-05-23 00:00:00+00:00
12:46:57,336 root DEBUG 2020-05-24 00:00:00+00:00
12:46:57,336 root DEBUG 2020-05-25 00:00:00+00:00
12:46:57,336 root DEBUG 2020-05-26 00:00:00+00:00
12:46:57,336 root DEBUG 2020-05-27 00:00:00+00:00
12:46:57,336 root DEBUG 2020-05-28 00:00:00+00:00
12:46:57,336 root DEBUG 2020-05-29 00:00:00+00:00
12:46:57,336 root DEBUG 2020-05-30 00:00:00+00:00
12:46:57,336 root DEBUG 2020-05-31 00:00:00+00:00
12:46:57,336 root DEBUG 2020-06-01 00:00:00+00:00
12:46:57,336 root DEBUG 2020-06-02 00:00:00+00:00
12:46:57,336 root DEBUG 2020-06-03 00:00:00+00:00
12:46:57,336 root DEBUG 2020-06-04 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-05 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-06 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-07 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-08 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-09 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-10 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-11 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-12 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-13 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-14 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-15 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-16 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-17 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-18 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-19 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-20 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-21 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-22 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-23 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-24 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-25 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-26 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-27 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-28 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-29 00:00:00+00:00
12:46:57,337 root DEBUG 2020-06-30 00:00:00+00:00
12:46:57,337 root DEBUG 2020-07-01 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-02 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-03 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-04 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-05 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-06 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-07 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-08 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-09 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-10 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-11 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-12 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-13 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-14 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-15 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-16 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-17 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-18 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-19 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-20 00:00:00+00:00
12:46:57,338 root DEBUG 2020-07-21 00:00:00+00:00
12:46:57,339 root DEBUG 2020-07-22 00:00:00+00:00
12:46:57,339 root DEBUG 2020-07-23 00:00:00+00:00
12:46:57,339 root DEBUG 2020-07-24 00:00:00+00:00
12:46:57,339 root DEBUG 2020-07-25 00:00:00+00:00
12:46:57,339 root DEBUG 2020-07-26 00:00:00+00:00
12:46:57,339 root DEBUG 2020-07-27 00:00:00+00:00
12:46:57,339 root DEBUG 2020-07-28 00:00:00+00:00
12:46:57,339 root DEBUG 2020-07-29 00:00:00+00:00
12:46:57,339 root DEBUG 2020-07-30 00:00:00+00:00
12:46:57,339 root DEBUG 2020-07-31 00:00:00+00:00
12:46:57,339 root DEBUG 2020-08-01 00:00:00+00:00
12:46:57,339 root DEBUG 2020-08-02 00:00:00+00:00
12:46:57,339 root DEBUG 2020-08-03 00:00:00+00:00
12:46:57,339 root DEBUG 2020-08-04 00:00:00+00:00
12:46:57,339 root DEBUG 2020-08-05 00:00:00+00:00
12:46:57,339 root DEBUG 2020-08-06 00:00:00+00:00
12:46:57,339 root DEBUG 2020-08-07 00:00:00+00:00
12:46:57,339 root DEBUG 2020-08-08 00:00:00+00:00
12:46:57,339 root DEBUG 2020-08-09 00:00:00+00:00
12:46:57,339 root DEBUG 2020-08-10 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-11 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-12 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-13 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-14 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-15 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-16 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-17 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-18 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-19 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-20 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-21 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-22 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-23 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-24 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-25 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-26 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-27 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-28 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-29 00:00:00+00:00
12:46:57,340 root DEBUG 2020-08-30 00:00:00+00:00
12:46:57,341 root DEBUG 2020-08-31 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-01 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-02 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-03 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-04 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-05 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-06 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-07 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-08 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-09 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-10 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-11 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-12 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-13 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-14 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-15 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-16 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-17 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-18 00:00:00+00:00
12:46:57,341 root DEBUG 2020-09-19 00:00:00+00:00
12:46:57,342 root DEBUG 2020-09-20 00:00:00+00:00
12:46:57,342 root DEBUG 2020-09-21 00:00:00+00:00
12:46:57,342 root DEBUG 2020-09-22 00:00:00+00:00
12:46:57,342 root DEBUG 2020-09-23 00:00:00+00:00
12:46:57,342 root DEBUG 2020-09-24 00:00:00+00:00
12:46:57,342 root DEBUG 2020-09-25 00:00:00+00:00
12:46:57,342 root DEBUG 2020-09-26 00:00:00+00:00
12:46:57,342 root DEBUG 2020-09-27 00:00:00+00:00
12:46:57,342 root DEBUG 2020-09-28 00:00:00+00:00
12:46:57,342 root DEBUG 2020-09-29 00:00:00+00:00
12:46:57,342 root DEBUG 2020-09-30 00:00:00+00:00
12:46:57,342 root DEBUG 2020-10-01 00:00:00+00:00
12:46:57,342 root DEBUG 2020-10-02 00:00:00+00:00
12:46:57,342 root DEBUG 2020-10-03 00:00:00+00:00
12:46:57,342 root DEBUG 2020-10-04 00:00:00+00:00
12:46:57,342 root DEBUG 2020-10-05 00:00:00+00:00
12:46:57,342 root DEBUG 2020-10-06 00:00:00+00:00
12:46:57,342 root DEBUG 2020-10-07 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-08 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-09 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-10 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-11 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-12 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-13 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-14 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-15 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-16 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-17 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-18 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-19 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-20 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-21 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-22 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-23 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-24 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-25 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-26 00:00:00+00:00
12:46:57,343 root DEBUG 2020-10-27 00:00:00+00:00
12:46:57,344 root DEBUG 2020-10-28 00:00:00+00:00
12:46:57,344 root DEBUG 2020-10-29 00:00:00+00:00
12:46:57,344 root DEBUG 2020-10-30 00:00:00+00:00
12:46:57,344 root DEBUG 2020-10-31 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-01 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-02 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-03 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-04 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-05 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-06 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-07 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-08 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-09 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-10 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-11 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-12 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-13 00:00:00+00:00
12:46:57,344 root DEBUG 2020-11-14 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-15 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-16 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-17 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-18 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-19 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-20 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-21 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-22 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-23 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-24 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-25 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-26 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-27 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-28 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-29 00:00:00+00:00
12:46:57,345 root DEBUG 2020-11-30 00:00:00+00:00
12:46:57,345 root DEBUG 2020-12-01 00:00:00+00:00
12:46:57,345 root DEBUG 2020-12-02 00:00:00+00:00
12:46:57,345 root DEBUG 2020-12-03 00:00:00+00:00
12:46:57,345 root DEBUG 2020-12-04 00:00:00+00:00
12:46:57,345 root DEBUG 2020-12-05 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-06 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-07 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-08 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-09 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-10 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-11 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-12 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-13 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-14 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-15 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-16 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-17 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-18 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-19 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-20 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-21 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-22 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-23 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-24 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-25 00:00:00+00:00
12:46:57,346 root DEBUG 2020-12-26 00:00:00+00:00
12:46:57,347 root DEBUG 2020-12-27 00:00:00+00:00
12:46:57,347 root DEBUG 2020-12-28 00:00:00+00:00
12:46:57,347 root DEBUG 2020-12-29 00:00:00+00:00
12:46:57,347 root DEBUG 2020-12-30 00:00:00+00:00
12:46:57,347 root DEBUG 2020-12-31 00:00:00+00:00
12:46:57,389 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0.
12:46:57,389 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
12:46:57,389 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,389 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,389 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
12:46:57,389 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
12:46:57,389 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
12:46:57,389 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:46:57,389 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
12:46:57,389 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
12:46:57,389 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
12:46:57,390 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
12:46:57,391 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-BoldOblique.otf) oblique normal 600 normal>) = 11.24
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RBI_G.ttf) italic normal 700 normal>) = 11.335
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Biolinum G' (LinBiolinum_RB_G.ttf) normal normal 700 normal>) = 10.335
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-CondensedItalic.ttf) italic normal 400 condensed>) = 11.25
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
12:46:57,392 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
12:46:57,393 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Black.ttf) normal normal 900 normal>) = 10.525
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,394 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Condensed.ttf) normal normal 400 condensed>) = 10.25
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-ExtraLightIt.ttf) italic normal 200 normal>) = 11.24
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,395 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
12:46:57,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
12:46:57,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
12:46:57,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
12:46:57,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
12:46:57,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
12:46:57,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
12:46:57,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
12:46:57,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
12:46:57,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
12:46:57,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-CondensedBoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:46:57,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
12:46:57,396 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Light.ttf) normal normal 300 normal>) = 10.145
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Scheherazade' (Scheherazade-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-MediumItalic.ttf) italic normal 500 normal>) = 11.145
12:46:57,397 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruhl Hofshi' (FrankRuhlHofshi-Regular.otf) normal normal 400 normal>) = 10.05
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-ExtraLight.ttf) normal normal 200 normal>) = 10.24
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
12:46:57,398 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-CondensedItalic.ttf) italic normal 400 condensed>) = 11.25
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-LightItalic.ttf) italic normal 300 normal>) = 11.145
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-Medium.ttf) normal normal 500 normal>) = 10.145
12:46:57,399 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-BoldIt.ttf) italic normal 700 normal>) = 11.335
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Medium.ttf) normal normal 500 normal>) = 10.145
12:46:57,400 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
12:46:57,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-ExtraLight.ttf) normal normal 200 normal>) = 10.24
12:46:57,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
12:46:57,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
12:46:57,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine Display G' (LinLibertine_DR_G.ttf) normal normal 400 normal>) = 10.05
12:46:57,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
12:46:57,401 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
12:46:57,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
12:46:57,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam CLM' (MiriamCLM-Book.ttf) normal normal 400 normal>) = 10.05
12:46:57,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
12:46:57,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
12:46:57,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
12:46:57,401 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Light.ttf) normal normal 300 normal>) = 10.145
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,402 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
12:46:57,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BlackIt.ttf) italic normal 900 normal>) = 11.525
12:46:57,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
12:46:57,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
12:46:57,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
12:46:57,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
12:46:57,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
12:46:57,403 matplotlib.font_manager DEBUG findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
12:46:57,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,403 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-LightIt.ttf) italic normal 300 normal>) = 11.145
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Alef' (Alef-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
12:46:57,404 matplotlib.font_manager DEBUG findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RB_G.ttf) normal normal 700 normal>) = 10.335
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-CondensedBold.ttf) normal normal 700 condensed>) = 10.535
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-SemiboldIt.ttf) italic normal 600 normal>) = 11.24
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Semibold.ttf) normal normal 600 normal>) = 10.24
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
12:46:57,405 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-ExtraLightIt.ttf) italic normal 200 normal>) = 11.24
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-CondensedBoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:46:57,406 matplotlib.font_manager DEBUG findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'David Libre' (DavidLibre-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Black.ttf) normal normal 900 normal>) = 10.525
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-SemiboldIt.ttf) italic normal 600 normal>) = 11.24
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,407 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Light.ttf) normal normal 300 normal>) = 10.145
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-It.ttf) italic normal 400 normal>) = 11.05
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'EmojiOne Color' (EmojiOneColor-SVGinOT.ttf) normal normal 400 normal>) = 10.05
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
12:46:57,408 matplotlib.font_manager DEBUG findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
12:46:57,409 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
12:46:57,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
12:46:57,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam CLM' (MiriamCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-SemiboldIt.ttf) italic normal 600 normal>) = 11.24
12:46:57,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
12:46:57,409 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
12:46:57,410 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:46:57,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
12:46:57,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
12:46:57,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
12:46:57,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,410 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
12:46:57,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
12:46:57,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
12:46:57,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,410 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
12:46:57,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
12:46:57,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
12:46:57,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
12:46:57,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
12:46:57,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-Light.otf) normal normal 300 normal>) = 10.145
12:46:57,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
12:46:57,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
12:46:57,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,411 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Scheherazade' (Scheherazade-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_R_G.ttf) normal normal 400 normal>) = 10.05
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
12:46:57,412 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLight.ttf) normal normal 200 normal>) = 10.24
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Black.ttf) normal normal 900 normal>) = 10.525
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RZ_G.ttf) normal normal 600 normal>) = 10.24
12:46:57,413 matplotlib.font_manager DEBUG findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-BoldSlanted.ttf) italic normal 700 normal>) = 11.335
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-MediumOblique.ttf) oblique normal 500 normal>) = 11.145
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-LightIt.ttf) italic normal 300 normal>) = 11.145
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
12:46:57,414 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-MediumIt.ttf) italic normal 500 normal>) = 11.145
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLightIt.ttf) italic normal 200 normal>) = 11.24
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
12:46:57,415 matplotlib.font_manager DEBUG findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
12:46:57,416 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
12:46:57,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
12:46:57,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RZI_G.ttf) italic normal 600 normal>) = 11.24
12:46:57,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
12:46:57,417 matplotlib.font_manager DEBUG findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
12:46:57,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
12:46:57,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
12:46:57,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
12:46:57,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
12:46:57,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
12:46:57,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
12:46:57,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,417 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
12:46:57,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
12:46:57,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
12:46:57,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
12:46:57,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
12:46:57,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
12:46:57,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-Medium.ttf) normal normal 500 normal>) = 10.145
12:46:57,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
12:46:57,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
12:46:57,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruhl Hofshi' (FrankRuhlHofshi-Bold.otf) normal normal 700 normal>) = 10.335
12:46:57,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
12:46:57,418 matplotlib.font_manager DEBUG findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
12:46:57,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
12:46:57,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
12:46:57,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-BoldIt.ttf) italic normal 700 normal>) = 11.335
12:46:57,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
12:46:57,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
12:46:57,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
12:46:57,419 matplotlib.font_manager DEBUG findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
12:46:57,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
12:46:57,419 matplotlib.font_manager DEBUG findfont: score(<Font 'David Libre' (DavidLibre-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
12:46:57,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
12:46:57,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
12:46:57,419 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Condensed.ttf) normal normal 400 condensed>) = 10.25
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-LightItalic.ttf) italic normal 300 normal>) = 11.145
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Reem Kufi' (ReemKufi-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
12:46:57,420 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
12:46:57,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
12:46:57,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
12:46:57,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
12:46:57,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-CondensedBold.ttf) normal normal 700 condensed>) = 10.535
12:46:57,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
12:46:57,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
12:46:57,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Light.ttf) normal normal 300 normal>) = 10.145
12:46:57,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Biolinum G' (LinBiolinum_R_G.ttf) normal normal 400 normal>) = 10.05
12:46:57,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
12:46:57,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
12:46:57,421 matplotlib.font_manager DEBUG findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
12:46:57,421 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-Book.ttf) normal normal 400 normal>) = 10.05
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RI_G.ttf) italic normal 400 normal>) = 11.05
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-LightIt.ttf) italic normal 300 normal>) = 11.145
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Biolinum G' (LinBiolinum_RI_G.ttf) italic normal 400 normal>) = 11.05
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
12:46:57,422 matplotlib.font_manager DEBUG findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-Slanted.ttf) italic normal 400 normal>) = 11.05
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Libre' (MiriamLibre-Regular.otf) normal normal 400 normal>) = 10.05
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Semibold.ttf) normal normal 600 normal>) = 10.24
12:46:57,423 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BoldIt.ttf) italic normal 700 normal>) = 11.335
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Light.ttf) normal normal 300 normal>) = 10.145
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
12:46:57,424 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Semibold.ttf) normal normal 600 normal>) = 10.24
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-Bold.otf) normal normal 600 normal>) = 10.24
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
12:46:57,425 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri Quran' (AmiriQuran.ttf) normal normal 400 normal>) = 10.05
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Alef' (Alef-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Libre' (MiriamLibre-Bold.otf) normal normal 700 normal>) = 10.335
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
12:46:57,426 matplotlib.font_manager DEBUG findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-It.ttf) italic normal 400 normal>) = 11.05
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
12:46:57,427 matplotlib.font_manager DEBUG findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
12:46:57,428 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
12:46:57,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
12:46:57,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
12:46:57,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
12:46:57,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
12:46:57,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-LightOblique.otf) oblique normal 300 normal>) = 11.145
12:46:57,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
12:46:57,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-BookOblique.ttf) oblique normal 400 normal>) = 11.05
12:46:57,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-BlackIt.ttf) italic normal 900 normal>) = 11.525
12:46:57,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
12:46:57,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-It.ttf) italic normal 400 normal>) = 11.05
12:46:57,428 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-BlackIt.ttf) italic normal 900 normal>) = 11.525
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
12:46:57,429 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
12:46:57,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
12:46:57,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
12:46:57,430 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
12:46:57,430 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0 to DejaVu Sans ('C:\\dev\\cbibs\\python\\cbibs-plot\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
12:46:57,457 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=19.2.
12:46:57,457 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
12:46:57,457 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,457 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,457 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
12:46:57,458 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
12:46:57,459 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
12:46:57,460 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
12:46:57,460 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
12:46:57,460 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,460 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
12:46:57,460 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
12:46:57,460 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
12:46:57,460 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
12:46:57,460 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
12:46:57,460 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
12:46:57,460 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
12:46:57,460 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
12:46:57,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
12:46:57,460 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-BoldOblique.otf) oblique normal 600 normal>) = 11.24
12:46:57,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RBI_G.ttf) italic normal 700 normal>) = 11.335
12:46:57,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
12:46:57,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
12:46:57,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Biolinum G' (LinBiolinum_RB_G.ttf) normal normal 700 normal>) = 10.335
12:46:57,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-CondensedItalic.ttf) italic normal 400 condensed>) = 11.25
12:46:57,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
12:46:57,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
12:46:57,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
12:46:57,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
12:46:57,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
12:46:57,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
12:46:57,461 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
12:46:57,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
12:46:57,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
12:46:57,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
12:46:57,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
12:46:57,462 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
12:46:57,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
12:46:57,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
12:46:57,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
12:46:57,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
12:46:57,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
12:46:57,462 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
12:46:57,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
12:46:57,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
12:46:57,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
12:46:57,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
12:46:57,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Black.ttf) normal normal 900 normal>) = 10.525
12:46:57,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
12:46:57,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
12:46:57,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
12:46:57,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
12:46:57,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
12:46:57,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
12:46:57,463 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Condensed.ttf) normal normal 400 condensed>) = 10.25
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-ExtraLightIt.ttf) italic normal 200 normal>) = 11.24
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
12:46:57,464 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
12:46:57,465 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-CondensedBoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Light.ttf) normal normal 300 normal>) = 10.145
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Scheherazade' (Scheherazade-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
12:46:57,466 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-MediumItalic.ttf) italic normal 500 normal>) = 11.145
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruhl Hofshi' (FrankRuhlHofshi-Regular.otf) normal normal 400 normal>) = 10.05
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-ExtraLight.ttf) normal normal 200 normal>) = 10.24
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
12:46:57,467 matplotlib.font_manager DEBUG findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-CondensedItalic.ttf) italic normal 400 condensed>) = 11.25
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
12:46:57,468 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-LightItalic.ttf) italic normal 300 normal>) = 11.145
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-Medium.ttf) normal normal 500 normal>) = 10.145
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-BoldIt.ttf) italic normal 700 normal>) = 11.335
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
12:46:57,469 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
12:46:57,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Medium.ttf) normal normal 500 normal>) = 10.145
12:46:57,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
12:46:57,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-ExtraLight.ttf) normal normal 200 normal>) = 10.24
12:46:57,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
12:46:57,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
12:46:57,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine Display G' (LinLibertine_DR_G.ttf) normal normal 400 normal>) = 10.05
12:46:57,470 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
12:46:57,470 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam CLM' (MiriamCLM-Book.ttf) normal normal 400 normal>) = 10.05
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
12:46:57,471 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Light.ttf) normal normal 300 normal>) = 10.145
12:46:57,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
12:46:57,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
12:46:57,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
12:46:57,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
12:46:57,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
12:46:57,472 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BlackIt.ttf) italic normal 900 normal>) = 11.525
12:46:57,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
12:46:57,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
12:46:57,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
12:46:57,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
12:46:57,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
12:46:57,473 matplotlib.font_manager DEBUG findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
12:46:57,473 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
12:46:57,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
12:46:57,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-LightIt.ttf) italic normal 300 normal>) = 11.145
12:46:57,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
12:46:57,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
12:46:57,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
12:46:57,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Alef' (Alef-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
12:46:57,474 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RB_G.ttf) normal normal 700 normal>) = 10.335
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-CondensedBold.ttf) normal normal 700 condensed>) = 10.535
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-SemiboldIt.ttf) italic normal 600 normal>) = 11.24
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Semibold.ttf) normal normal 600 normal>) = 10.24
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,475 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
12:46:57,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
12:46:57,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
12:46:57,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
12:46:57,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
12:46:57,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
12:46:57,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
12:46:57,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-ExtraLightIt.ttf) italic normal 200 normal>) = 11.24
12:46:57,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
12:46:57,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
12:46:57,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
12:46:57,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-CondensedBoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:46:57,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
12:46:57,476 matplotlib.font_manager DEBUG findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'David Libre' (DavidLibre-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Black.ttf) normal normal 900 normal>) = 10.525
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
12:46:57,477 matplotlib.font_manager DEBUG findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
12:46:57,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
12:46:57,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
12:46:57,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-SemiboldIt.ttf) italic normal 600 normal>) = 11.24
12:46:57,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
12:46:57,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Light.ttf) normal normal 300 normal>) = 10.145
12:46:57,478 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-It.ttf) italic normal 400 normal>) = 11.05
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'EmojiOne Color' (EmojiOneColor-SVGinOT.ttf) normal normal 400 normal>) = 10.05
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam CLM' (MiriamCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-SemiboldIt.ttf) italic normal 600 normal>) = 11.24
12:46:57,479 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,480 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-Light.otf) normal normal 300 normal>) = 10.145
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
12:46:57,481 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Scheherazade' (Scheherazade-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_R_G.ttf) normal normal 400 normal>) = 10.05
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
12:46:57,482 matplotlib.font_manager DEBUG findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLight.ttf) normal normal 200 normal>) = 10.24
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Black.ttf) normal normal 900 normal>) = 10.525
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RZ_G.ttf) normal normal 600 normal>) = 10.24
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,483 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-BoldSlanted.ttf) italic normal 700 normal>) = 11.335
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-MediumOblique.ttf) oblique normal 500 normal>) = 11.145
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-LightIt.ttf) italic normal 300 normal>) = 11.145
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,484 matplotlib.font_manager DEBUG findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
12:46:57,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
12:46:57,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
12:46:57,485 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
12:46:57,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
12:46:57,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-MediumIt.ttf) italic normal 500 normal>) = 11.145
12:46:57,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLightIt.ttf) italic normal 200 normal>) = 11.24
12:46:57,485 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:46:57,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
12:46:57,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
12:46:57,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
12:46:57,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
12:46:57,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
12:46:57,485 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
12:46:57,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
12:46:57,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
12:46:57,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
12:46:57,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
12:46:57,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
12:46:57,486 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
12:46:57,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
12:46:57,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
12:46:57,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
12:46:57,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
12:46:57,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
12:46:57,486 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
12:46:57,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
12:46:57,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RZI_G.ttf) italic normal 600 normal>) = 11.24
12:46:57,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
12:46:57,487 matplotlib.font_manager DEBUG findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
12:46:57,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
12:46:57,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
12:46:57,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
12:46:57,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
12:46:57,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
12:46:57,487 matplotlib.font_manager DEBUG findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-Medium.ttf) normal normal 500 normal>) = 10.145
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruhl Hofshi' (FrankRuhlHofshi-Bold.otf) normal normal 700 normal>) = 10.335
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
12:46:57,488 matplotlib.font_manager DEBUG findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
12:46:57,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
12:46:57,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
12:46:57,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-BoldIt.ttf) italic normal 700 normal>) = 11.335
12:46:57,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
12:46:57,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
12:46:57,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
12:46:57,489 matplotlib.font_manager DEBUG findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
12:46:57,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
12:46:57,489 matplotlib.font_manager DEBUG findfont: score(<Font 'David Libre' (DavidLibre-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
12:46:57,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
12:46:57,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
12:46:57,489 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Condensed.ttf) normal normal 400 condensed>) = 10.25
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-LightItalic.ttf) italic normal 300 normal>) = 11.145
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Reem Kufi' (ReemKufi-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,490 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-CondensedBold.ttf) normal normal 700 condensed>) = 10.535
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Light.ttf) normal normal 300 normal>) = 10.145
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Biolinum G' (LinBiolinum_R_G.ttf) normal normal 400 normal>) = 10.05
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
12:46:57,491 matplotlib.font_manager DEBUG findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
12:46:57,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
12:46:57,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-Book.ttf) normal normal 400 normal>) = 10.05
12:46:57,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
12:46:57,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RI_G.ttf) italic normal 400 normal>) = 11.05
12:46:57,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
12:46:57,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-LightIt.ttf) italic normal 300 normal>) = 11.145
12:46:57,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
12:46:57,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
12:46:57,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Biolinum G' (LinBiolinum_RI_G.ttf) italic normal 400 normal>) = 11.05
12:46:57,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
12:46:57,492 matplotlib.font_manager DEBUG findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-Slanted.ttf) italic normal 400 normal>) = 11.05
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Libre' (MiriamLibre-Regular.otf) normal normal 400 normal>) = 10.05
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Semibold.ttf) normal normal 600 normal>) = 10.24
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
12:46:57,493 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BoldIt.ttf) italic normal 700 normal>) = 11.335
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Light.ttf) normal normal 300 normal>) = 10.145
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
12:46:57,494 matplotlib.font_manager DEBUG findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Semibold.ttf) normal normal 600 normal>) = 10.24
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-Bold.otf) normal normal 600 normal>) = 10.24
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri Quran' (AmiriQuran.ttf) normal normal 400 normal>) = 10.05
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
12:46:57,495 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Alef' (Alef-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Libre' (MiriamLibre-Bold.otf) normal normal 700 normal>) = 10.335
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
12:46:57,496 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-It.ttf) italic normal 400 normal>) = 11.05
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
12:46:57,497 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-LightOblique.otf) oblique normal 300 normal>) = 11.145
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-BookOblique.ttf) oblique normal 400 normal>) = 11.05
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-BlackIt.ttf) italic normal 900 normal>) = 11.525
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-It.ttf) italic normal 400 normal>) = 11.05
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-BlackIt.ttf) italic normal 900 normal>) = 11.525
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-Regular.ttf) normal normal 400 normal>) = 10.05
12:46:57,498 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-Italic.ttf) italic normal 400 normal>) = 11.05
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
12:46:57,499 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
12:46:57,499 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=19.2 to DejaVu Sans ('C:\\dev\\cbibs\\python\\cbibs-plot\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
12:55:09,364 root DEBUG First Date 2020-01-01 00:00:00
12:55:09,364 root DEBUG Last Date 2021-01-01 00:00:00
12:55:09,672 root DEBUG 2010-01-01 00:00:00 to 2010-12-31 23:59:59 
12:55:10,300 root DEBUG 2011-01-01 00:00:00 to 2011-12-31 23:59:59 
12:55:10,690 root DEBUG 2012-01-01 00:00:00 to 2012-12-31 23:59:59 
12:55:10,865 root DEBUG 2013-01-01 00:00:00 to 2013-12-31 23:59:59 
12:55:11,18 root DEBUG 2014-01-01 00:00:00 to 2014-12-31 23:59:59 
12:55:11,163 root DEBUG 2015-01-01 00:00:00 to 2015-12-31 23:59:59 
12:55:11,308 root DEBUG 2016-01-01 00:00:00 to 2016-12-31 23:59:59 
12:55:11,502 root DEBUG 2017-01-01 00:00:00 to 2017-12-31 23:59:59 
12:55:11,670 root DEBUG 2018-01-01 00:00:00 to 2018-12-31 23:59:59 
12:55:12,317 root DEBUG 2019-01-01 00:00:00 to 2019-12-31 23:59:59 
12:55:14,596 root DEBUG ------------------getDatesFromClimate-----------------------------------------
12:55:14,596 root DEBUG Testing the dates
12:55:14,596 root DEBUG 2020-01-01 00:00:00+00:00
12:55:14,596 root DEBUG 2020-01-02 00:00:00+00:00
12:55:14,596 root DEBUG 2020-01-03 00:00:00+00:00
12:55:14,596 root DEBUG 2020-01-04 00:00:00+00:00
12:55:14,596 root DEBUG 2020-01-05 00:00:00+00:00
12:55:14,596 root DEBUG 2020-01-06 00:00:00+00:00
12:55:14,596 root DEBUG 2020-01-07 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-08 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-09 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-10 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-11 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-12 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-13 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-14 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-15 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-16 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-17 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-18 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-19 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-20 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-21 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-22 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-23 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-24 00:00:00+00:00
12:55:14,597 root DEBUG 2020-01-25 00:00:00+00:00
12:55:14,598 root DEBUG 2020-01-26 00:00:00+00:00
12:55:14,598 root DEBUG 2020-01-27 00:00:00+00:00
12:55:14,598 root DEBUG 2020-01-28 00:00:00+00:00
12:55:14,598 root DEBUG 2020-01-29 00:00:00+00:00
12:55:14,598 root DEBUG 2020-01-30 00:00:00+00:00
12:55:14,598 root DEBUG 2020-01-31 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-01 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-02 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-03 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-04 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-05 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-06 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-07 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-08 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-09 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-10 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-11 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-12 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-13 00:00:00+00:00
12:55:14,598 root DEBUG 2020-02-14 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-15 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-16 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-17 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-18 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-19 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-20 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-21 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-22 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-23 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-24 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-25 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-26 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-27 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-28 00:00:00+00:00
12:55:14,599 root DEBUG 2020-02-29 00:00:00+00:00
12:55:14,599 root DEBUG 2020-03-01 00:00:00+00:00
12:55:14,599 root DEBUG 2020-03-02 00:00:00+00:00
12:55:14,599 root DEBUG 2020-03-03 00:00:00+00:00
12:55:14,599 root DEBUG 2020-03-04 00:00:00+00:00
12:55:14,599 root DEBUG 2020-03-05 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-06 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-07 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-08 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-09 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-10 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-11 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-12 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-13 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-14 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-15 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-16 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-17 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-18 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-19 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-20 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-21 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-22 00:00:00+00:00
12:55:14,600 root DEBUG 2020-03-23 00:00:00+00:00
12:55:14,601 root DEBUG 2020-03-24 00:00:00+00:00
12:55:14,601 root DEBUG 2020-03-25 00:00:00+00:00
12:55:14,601 root DEBUG 2020-03-26 00:00:00+00:00
12:55:14,601 root DEBUG 2020-03-27 00:00:00+00:00
12:55:14,601 root DEBUG 2020-03-28 00:00:00+00:00
12:55:14,601 root DEBUG 2020-03-29 00:00:00+00:00
12:55:14,601 root DEBUG 2020-03-30 00:00:00+00:00
12:55:14,601 root DEBUG 2020-03-31 00:00:00+00:00
12:55:14,601 root DEBUG 2020-04-01 00:00:00+00:00
12:55:14,601 root DEBUG 2020-04-02 00:00:00+00:00
12:55:14,601 root DEBUG 2020-04-03 00:00:00+00:00
12:55:14,601 root DEBUG 2020-04-04 00:00:00+00:00
12:55:14,601 root DEBUG 2020-04-05 00:00:00+00:00
12:55:14,601 root DEBUG 2020-04-06 00:00:00+00:00
12:55:14,601 root DEBUG 2020-04-07 00:00:00+00:00
12:55:14,601 root DEBUG 2020-04-08 00:00:00+00:00
12:55:14,601 root DEBUG 2020-04-09 00:00:00+00:00
12:55:14,601 root DEBUG 2020-04-10 00:00:00+00:00
12:55:14,601 root DEBUG 2020-04-11 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-12 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-13 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-14 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-15 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-16 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-17 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-18 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-19 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-20 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-21 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-22 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-23 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-24 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-25 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-26 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-27 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-28 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-29 00:00:00+00:00
12:55:14,602 root DEBUG 2020-04-30 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-01 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-02 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-03 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-04 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-05 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-06 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-07 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-08 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-09 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-10 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-11 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-12 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-13 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-14 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-15 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-16 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-17 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-18 00:00:00+00:00
12:55:14,603 root DEBUG 2020-05-19 00:00:00+00:00
12:55:14,604 root DEBUG 2020-05-20 00:00:00+00:00
12:55:14,604 root DEBUG 2020-05-21 00:00:00+00:00
12:55:14,604 root DEBUG 2020-05-22 00:00:00+00:00
12:55:14,604 root DEBUG 2020-05-23 00:00:00+00:00
12:55:14,604 root DEBUG 2020-05-24 00:00:00+00:00
12:55:14,604 root DEBUG 2020-05-25 00:00:00+00:00
12:55:14,604 root DEBUG 2020-05-26 00:00:00+00:00
12:55:14,604 root DEBUG 2020-05-27 00:00:00+00:00
12:55:14,604 root DEBUG 2020-05-28 00:00:00+00:00
12:55:14,604 root DEBUG 2020-05-29 00:00:00+00:00
12:55:14,604 root DEBUG 2020-05-30 00:00:00+00:00
12:55:14,604 root DEBUG 2020-05-31 00:00:00+00:00
12:55:14,604 root DEBUG 2020-06-01 00:00:00+00:00
12:55:14,604 root DEBUG 2020-06-02 00:00:00+00:00
12:55:14,604 root DEBUG 2020-06-03 00:00:00+00:00
12:55:14,604 root DEBUG 2020-06-04 00:00:00+00:00
12:55:14,604 root DEBUG 2020-06-05 00:00:00+00:00
12:55:14,604 root DEBUG 2020-06-06 00:00:00+00:00
12:55:14,604 root DEBUG 2020-06-07 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-08 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-09 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-10 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-11 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-12 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-13 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-14 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-15 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-16 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-17 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-18 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-19 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-20 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-21 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-22 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-23 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-24 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-25 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-26 00:00:00+00:00
12:55:14,605 root DEBUG 2020-06-27 00:00:00+00:00
12:55:14,606 root DEBUG 2020-06-28 00:00:00+00:00
12:55:14,606 root DEBUG 2020-06-29 00:00:00+00:00
12:55:14,606 root DEBUG 2020-06-30 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-01 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-02 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-03 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-04 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-05 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-06 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-07 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-08 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-09 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-10 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-11 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-12 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-13 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-14 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-15 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-16 00:00:00+00:00
12:55:14,606 root DEBUG 2020-07-17 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-18 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-19 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-20 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-21 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-22 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-23 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-24 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-25 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-26 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-27 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-28 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-29 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-30 00:00:00+00:00
12:55:14,607 root DEBUG 2020-07-31 00:00:00+00:00
12:55:14,607 root DEBUG 2020-08-01 00:00:00+00:00
12:55:14,607 root DEBUG 2020-08-02 00:00:00+00:00
12:55:14,607 root DEBUG 2020-08-03 00:00:00+00:00
12:55:14,607 root DEBUG 2020-08-04 00:00:00+00:00
12:55:14,607 root DEBUG 2020-08-05 00:00:00+00:00
12:55:14,607 root DEBUG 2020-08-06 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-07 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-08 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-09 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-10 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-11 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-12 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-13 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-14 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-15 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-16 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-17 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-18 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-19 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-20 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-21 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-22 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-23 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-24 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-25 00:00:00+00:00
12:55:14,608 root DEBUG 2020-08-26 00:00:00+00:00
12:55:14,609 root DEBUG 2020-08-27 00:00:00+00:00
12:55:14,609 root DEBUG 2020-08-28 00:00:00+00:00
12:55:14,609 root DEBUG 2020-08-29 00:00:00+00:00
12:55:14,609 root DEBUG 2020-08-30 00:00:00+00:00
12:55:14,609 root DEBUG 2020-08-31 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-01 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-02 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-03 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-04 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-05 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-06 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-07 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-08 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-09 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-10 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-11 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-12 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-13 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-14 00:00:00+00:00
12:55:14,609 root DEBUG 2020-09-15 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-16 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-17 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-18 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-19 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-20 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-21 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-22 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-23 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-24 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-25 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-26 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-27 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-28 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-29 00:00:00+00:00
12:55:14,610 root DEBUG 2020-09-30 00:00:00+00:00
12:55:14,610 root DEBUG 2020-10-01 00:00:00+00:00
12:55:14,610 root DEBUG 2020-10-02 00:00:00+00:00
12:55:14,610 root DEBUG 2020-10-03 00:00:00+00:00
12:55:14,610 root DEBUG 2020-10-04 00:00:00+00:00
12:55:14,610 root DEBUG 2020-10-05 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-06 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-07 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-08 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-09 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-10 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-11 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-12 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-13 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-14 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-15 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-16 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-17 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-18 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-19 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-20 00:00:00+00:00
12:55:14,611 root DEBUG 2020-10-21 00:00:00+00:00
12:55:14,612 root DEBUG 2020-10-22 00:00:00+00:00
12:55:14,612 root DEBUG 2020-10-23 00:00:00+00:00
12:55:14,612 root DEBUG 2020-10-24 00:00:00+00:00
12:55:14,612 root DEBUG 2020-10-25 00:00:00+00:00
12:55:14,612 root DEBUG 2020-10-26 00:00:00+00:00
12:55:14,612 root DEBUG 2020-10-27 00:00:00+00:00
12:55:14,612 root DEBUG 2020-10-28 00:00:00+00:00
12:55:14,612 root DEBUG 2020-10-29 00:00:00+00:00
12:55:14,612 root DEBUG 2020-10-30 00:00:00+00:00
12:55:14,612 root DEBUG 2020-10-31 00:00:00+00:00
12:55:14,612 root DEBUG 2020-11-01 00:00:00+00:00
12:55:14,612 root DEBUG 2020-11-02 00:00:00+00:00
12:55:14,612 root DEBUG 2020-11-03 00:00:00+00:00
12:55:14,612 root DEBUG 2020-11-04 00:00:00+00:00
12:55:14,612 root DEBUG 2020-11-05 00:00:00+00:00
12:55:14,612 root DEBUG 2020-11-06 00:00:00+00:00
12:55:14,612 root DEBUG 2020-11-07 00:00:00+00:00
12:55:14,612 root DEBUG 2020-11-08 00:00:00+00:00
12:55:14,612 root DEBUG 2020-11-09 00:00:00+00:00
12:55:14,612 root DEBUG 2020-11-10 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-11 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-12 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-13 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-14 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-15 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-16 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-17 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-18 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-19 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-20 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-21 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-22 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-23 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-24 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-25 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-26 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-27 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-28 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-29 00:00:00+00:00
12:55:14,613 root DEBUG 2020-11-30 00:00:00+00:00
12:55:14,613 root DEBUG 2020-12-01 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-02 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-03 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-04 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-05 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-06 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-07 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-08 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-09 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-10 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-11 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-12 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-13 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-14 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-15 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-16 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-17 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-18 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-19 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-20 00:00:00+00:00
12:55:14,614 root DEBUG 2020-12-21 00:00:00+00:00
12:55:14,615 root DEBUG 2020-12-22 00:00:00+00:00
12:55:14,615 root DEBUG 2020-12-23 00:00:00+00:00
12:55:14,615 root DEBUG 2020-12-24 00:00:00+00:00
12:55:14,615 root DEBUG 2020-12-25 00:00:00+00:00
12:55:14,615 root DEBUG 2020-12-26 00:00:00+00:00
12:55:14,615 root DEBUG 2020-12-27 00:00:00+00:00
12:55:14,615 root DEBUG 2020-12-28 00:00:00+00:00
12:55:14,615 root DEBUG 2020-12-29 00:00:00+00:00
12:55:14,615 root DEBUG 2020-12-30 00:00:00+00:00
12:55:14,615 root DEBUG 2020-12-31 00:00:00+00:00
12:55:14,660 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0.
12:55:14,660 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
12:55:14,660 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,661 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,661 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
12:55:14,661 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
12:55:14,661 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
12:55:14,661 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:55:14,661 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
12:55:14,661 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
12:55:14,661 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
12:55:14,661 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
12:55:14,661 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
12:55:14,661 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
12:55:14,661 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
12:55:14,662 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
12:55:14,662 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
12:55:14,662 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
12:55:14,662 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
12:55:14,662 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
12:55:14,662 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,662 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
12:55:14,662 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
12:55:14,662 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
12:55:14,662 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
12:55:14,662 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
12:55:14,662 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
12:55:14,662 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-BoldOblique.otf) oblique normal 600 normal>) = 11.24
12:55:14,663 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RBI_G.ttf) italic normal 700 normal>) = 11.335
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Biolinum G' (LinBiolinum_RB_G.ttf) normal normal 700 normal>) = 10.335
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-CondensedItalic.ttf) italic normal 400 condensed>) = 11.25
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
12:55:14,664 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
12:55:14,665 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Black.ttf) normal normal 900 normal>) = 10.525
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
12:55:14,666 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Condensed.ttf) normal normal 400 condensed>) = 10.25
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-ExtraLightIt.ttf) italic normal 200 normal>) = 11.24
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
12:55:14,667 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-CondensedBoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Light.ttf) normal normal 300 normal>) = 10.145
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
12:55:14,668 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Scheherazade' (Scheherazade-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-MediumItalic.ttf) italic normal 500 normal>) = 11.145
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruhl Hofshi' (FrankRuhlHofshi-Regular.otf) normal normal 400 normal>) = 10.05
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-ExtraLight.ttf) normal normal 200 normal>) = 10.24
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
12:55:14,669 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
12:55:14,670 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-CondensedItalic.ttf) italic normal 400 condensed>) = 11.25
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-LightItalic.ttf) italic normal 300 normal>) = 11.145
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-Medium.ttf) normal normal 500 normal>) = 10.145
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
12:55:14,671 matplotlib.font_manager DEBUG findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-BoldIt.ttf) italic normal 700 normal>) = 11.335
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Medium.ttf) normal normal 500 normal>) = 10.145
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-ExtraLight.ttf) normal normal 200 normal>) = 10.24
12:55:14,672 matplotlib.font_manager DEBUG findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine Display G' (LinLibertine_DR_G.ttf) normal normal 400 normal>) = 10.05
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam CLM' (MiriamCLM-Book.ttf) normal normal 400 normal>) = 10.05
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
12:55:14,673 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Light.ttf) normal normal 300 normal>) = 10.145
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BlackIt.ttf) italic normal 900 normal>) = 11.525
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
12:55:14,674 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-LightIt.ttf) italic normal 300 normal>) = 11.145
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,675 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Alef' (Alef-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RB_G.ttf) normal normal 700 normal>) = 10.335
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-CondensedBold.ttf) normal normal 700 condensed>) = 10.535
12:55:14,676 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-SemiboldIt.ttf) italic normal 600 normal>) = 11.24
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Semibold.ttf) normal normal 600 normal>) = 10.24
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-ExtraLightIt.ttf) italic normal 200 normal>) = 11.24
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
12:55:14,677 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-CondensedBoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'David Libre' (DavidLibre-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,678 matplotlib.font_manager DEBUG findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Black.ttf) normal normal 900 normal>) = 10.525
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-SemiboldIt.ttf) italic normal 600 normal>) = 11.24
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Light.ttf) normal normal 300 normal>) = 10.145
12:55:14,679 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-It.ttf) italic normal 400 normal>) = 11.05
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'EmojiOne Color' (EmojiOneColor-SVGinOT.ttf) normal normal 400 normal>) = 10.05
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam CLM' (MiriamCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,680 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-SemiboldIt.ttf) italic normal 600 normal>) = 11.24
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,681 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-Light.otf) normal normal 300 normal>) = 10.145
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
12:55:14,682 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Scheherazade' (Scheherazade-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_R_G.ttf) normal normal 400 normal>) = 10.05
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
12:55:14,683 matplotlib.font_manager DEBUG findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLight.ttf) normal normal 200 normal>) = 10.24
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Black.ttf) normal normal 900 normal>) = 10.525
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RZ_G.ttf) normal normal 600 normal>) = 10.24
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
12:55:14,684 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-BoldSlanted.ttf) italic normal 700 normal>) = 11.335
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-MediumOblique.ttf) oblique normal 500 normal>) = 11.145
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-LightIt.ttf) italic normal 300 normal>) = 11.145
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
12:55:14,685 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-MediumIt.ttf) italic normal 500 normal>) = 11.145
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLightIt.ttf) italic normal 200 normal>) = 11.24
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
12:55:14,686 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RZI_G.ttf) italic normal 600 normal>) = 11.24
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
12:55:14,687 matplotlib.font_manager DEBUG findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-Medium.ttf) normal normal 500 normal>) = 10.145
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruhl Hofshi' (FrankRuhlHofshi-Bold.otf) normal normal 700 normal>) = 10.335
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,688 matplotlib.font_manager DEBUG findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-BoldIt.ttf) italic normal 700 normal>) = 11.335
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'David Libre' (DavidLibre-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,689 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Condensed.ttf) normal normal 400 condensed>) = 10.25
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-LightItalic.ttf) italic normal 300 normal>) = 11.145
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Reem Kufi' (ReemKufi-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,690 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-CondensedBold.ttf) normal normal 700 condensed>) = 10.535
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Light.ttf) normal normal 300 normal>) = 10.145
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Biolinum G' (LinBiolinum_R_G.ttf) normal normal 400 normal>) = 10.05
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
12:55:14,691 matplotlib.font_manager DEBUG findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-Book.ttf) normal normal 400 normal>) = 10.05
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RI_G.ttf) italic normal 400 normal>) = 11.05
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-LightIt.ttf) italic normal 300 normal>) = 11.145
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Biolinum G' (LinBiolinum_RI_G.ttf) italic normal 400 normal>) = 11.05
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
12:55:14,692 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-Slanted.ttf) italic normal 400 normal>) = 11.05
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Libre' (MiriamLibre-Regular.otf) normal normal 400 normal>) = 10.05
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Semibold.ttf) normal normal 600 normal>) = 10.24
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BoldIt.ttf) italic normal 700 normal>) = 11.335
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:55:14,693 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
12:55:14,694 matplotlib.font_manager DEBUG findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
12:55:14,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
12:55:14,694 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
12:55:14,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,694 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
12:55:14,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
12:55:14,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Light.ttf) normal normal 300 normal>) = 10.145
12:55:14,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
12:55:14,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
12:55:14,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
12:55:14,694 matplotlib.font_manager DEBUG findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
12:55:14,694 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Semibold.ttf) normal normal 600 normal>) = 10.24
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-Bold.otf) normal normal 600 normal>) = 10.24
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri Quran' (AmiriQuran.ttf) normal normal 400 normal>) = 10.05
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
12:55:14,695 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
12:55:14,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Alef' (Alef-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,696 matplotlib.font_manager DEBUG findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
12:55:14,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Libre' (MiriamLibre-Bold.otf) normal normal 700 normal>) = 10.335
12:55:14,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
12:55:14,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
12:55:14,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
12:55:14,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
12:55:14,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
12:55:14,696 matplotlib.font_manager DEBUG findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
12:55:14,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
12:55:14,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
12:55:14,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
12:55:14,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-It.ttf) italic normal 400 normal>) = 11.05
12:55:14,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
12:55:14,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
12:55:14,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
12:55:14,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
12:55:14,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
12:55:14,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
12:55:14,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
12:55:14,697 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-LightOblique.otf) oblique normal 300 normal>) = 11.145
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-BookOblique.ttf) oblique normal 400 normal>) = 11.05
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-BlackIt.ttf) italic normal 900 normal>) = 11.525
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-It.ttf) italic normal 400 normal>) = 11.05
12:55:14,698 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-BlackIt.ttf) italic normal 900 normal>) = 11.525
12:55:14,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
12:55:14,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
12:55:14,699 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
12:55:14,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
12:55:14,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
12:55:14,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
12:55:14,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:55:14,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
12:55:14,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
12:55:14,699 matplotlib.font_manager DEBUG findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
12:55:14,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
12:55:14,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
12:55:14,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
12:55:14,700 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
12:55:14,700 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0 to DejaVu Sans ('C:\\dev\\cbibs\\python\\cbibs-plot\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
12:55:14,725 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=19.2.
12:55:14,725 matplotlib.font_manager DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
12:55:14,725 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,725 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,725 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
12:55:14,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
12:55:14,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
12:55:14,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:55:14,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
12:55:14,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
12:55:14,726 matplotlib.font_manager DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
12:55:14,726 matplotlib.font_manager DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
12:55:14,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
12:55:14,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
12:55:14,726 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
12:55:14,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
12:55:14,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
12:55:14,726 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
12:55:14,727 matplotlib.font_manager DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
12:55:14,727 matplotlib.font_manager DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
12:55:14,727 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,727 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
12:55:14,727 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
12:55:14,727 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
12:55:14,727 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
12:55:14,727 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
12:55:14,727 matplotlib.font_manager DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-BoldOblique.otf) oblique normal 600 normal>) = 11.24
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RBI_G.ttf) italic normal 700 normal>) = 11.335
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,728 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Biolinum G' (LinBiolinum_RB_G.ttf) normal normal 700 normal>) = 10.335
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-CondensedItalic.ttf) italic normal 400 condensed>) = 11.25
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
12:55:14,729 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
12:55:14,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
12:55:14,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
12:55:14,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
12:55:14,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
12:55:14,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
12:55:14,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
12:55:14,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
12:55:14,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
12:55:14,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
12:55:14,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
12:55:14,730 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Black.ttf) normal normal 900 normal>) = 10.525
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Condensed.ttf) normal normal 400 condensed>) = 10.25
12:55:14,731 matplotlib.font_manager DEBUG findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-ExtraLightIt.ttf) italic normal 200 normal>) = 11.24
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
12:55:14,732 matplotlib.font_manager DEBUG findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-CondensedBoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Light.ttf) normal normal 300 normal>) = 10.145
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
12:55:14,733 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Scheherazade' (Scheherazade-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-MediumItalic.ttf) italic normal 500 normal>) = 11.145
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruhl Hofshi' (FrankRuhlHofshi-Regular.otf) normal normal 400 normal>) = 10.05
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-ExtraLight.ttf) normal normal 200 normal>) = 10.24
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
12:55:14,734 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
12:55:14,735 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-CondensedItalic.ttf) italic normal 400 condensed>) = 11.25
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-LightItalic.ttf) italic normal 300 normal>) = 11.145
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-Medium.ttf) normal normal 500 normal>) = 10.145
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
12:55:14,736 matplotlib.font_manager DEBUG findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-BoldIt.ttf) italic normal 700 normal>) = 11.335
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Medium.ttf) normal normal 500 normal>) = 10.145
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-ExtraLight.ttf) normal normal 200 normal>) = 10.24
12:55:14,737 matplotlib.font_manager DEBUG findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine Display G' (LinLibertine_DR_G.ttf) normal normal 400 normal>) = 10.05
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam CLM' (MiriamCLM-Book.ttf) normal normal 400 normal>) = 10.05
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
12:55:14,738 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Light.ttf) normal normal 300 normal>) = 10.145
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BlackIt.ttf) italic normal 900 normal>) = 11.525
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,739 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic UI' (NotoSansArabicUI-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-LightIt.ttf) italic normal 300 normal>) = 11.145
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Hebrew' (NotoSerifHebrew-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
12:55:14,740 matplotlib.font_manager DEBUG findfont: score(<Font 'Alef' (Alef-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
12:55:14,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
12:55:14,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
12:55:14,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
12:55:14,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
12:55:14,741 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
12:55:14,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RB_G.ttf) normal normal 700 normal>) = 10.335
12:55:14,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,741 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
12:55:14,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-CondensedBold.ttf) normal normal 700 condensed>) = 10.535
12:55:14,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-SemiboldIt.ttf) italic normal 600 normal>) = 11.24
12:55:14,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Semibold.ttf) normal normal 600 normal>) = 10.24
12:55:14,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
12:55:14,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
12:55:14,742 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-ExtraLightIt.ttf) italic normal 200 normal>) = 11.24
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-CondensedBoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
12:55:14,743 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
12:55:14,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
12:55:14,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:55:14,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
12:55:14,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
12:55:14,744 matplotlib.font_manager DEBUG findfont: score(<Font 'David Libre' (DavidLibre-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
12:55:14,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Black.ttf) normal normal 900 normal>) = 10.525
12:55:14,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
12:55:14,744 matplotlib.font_manager DEBUG findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
12:55:14,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
12:55:14,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
12:55:14,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-SemiboldIt.ttf) italic normal 600 normal>) = 11.24
12:55:14,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
12:55:14,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic' (NotoNaskhArabic-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Light.ttf) normal normal 300 normal>) = 10.145
12:55:14,745 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-It.ttf) italic normal 400 normal>) = 11.05
12:55:14,745 matplotlib.font_manager DEBUG findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
12:55:14,745 matplotlib.font_manager DEBUG findfont: score(<Font 'EmojiOne Color' (EmojiOneColor-SVGinOT.ttf) normal normal 400 normal>) = 10.05
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam CLM' (MiriamCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-SemiboldIt.ttf) italic normal 600 normal>) = 11.24
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,746 matplotlib.font_manager DEBUG findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Armenian' (NotoSerifArmenian-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Naskh Arabic UI' (NotoNaskhArabicUI-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
12:55:14,747 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
12:55:14,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
12:55:14,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-Light.otf) normal normal 300 normal>) = 10.145
12:55:14,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
12:55:14,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
12:55:14,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif' (NotoSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
12:55:14,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
12:55:14,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
12:55:14,748 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Scheherazade' (Scheherazade-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_R_G.ttf) normal normal 400 normal>) = 10.05
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLight.ttf) normal normal 200 normal>) = 10.24
12:55:14,749 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Black.ttf) normal normal 900 normal>) = 10.525
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RZ_G.ttf) normal normal 600 normal>) = 10.24
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-BoldSlanted.ttf) italic normal 700 normal>) = 11.335
12:55:14,750 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-MediumOblique.ttf) oblique normal 500 normal>) = 11.145
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-LightIt.ttf) italic normal 300 normal>) = 11.145
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Hebrew' (NotoSansHebrew-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
12:55:14,751 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-MediumIt.ttf) italic normal 500 normal>) = 11.145
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLightIt.ttf) italic normal 200 normal>) = 11.24
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,752 matplotlib.font_manager DEBUG findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RZI_G.ttf) italic normal 600 normal>) = 11.24
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
12:55:14,753 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-Medium.ttf) normal normal 500 normal>) = 10.145
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
12:55:14,754 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruhl Hofshi' (FrankRuhlHofshi-Bold.otf) normal normal 700 normal>) = 10.335
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-BoldIt.ttf) italic normal 700 normal>) = 11.335
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'David Libre' (DavidLibre-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
12:55:14,755 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Carlito' (Carlito-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-Condensed.ttf) normal normal 400 condensed>) = 10.25
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Georgian' (NotoSansGeorgian-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-LightItalic.ttf) italic normal 300 normal>) = 11.145
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Reem Kufi' (ReemKufi-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,756 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-CondensedBold.ttf) normal normal 700 condensed>) = 10.535
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Light.ttf) normal normal 300 normal>) = 10.145
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Biolinum G' (LinBiolinum_R_G.ttf) normal normal 400 normal>) = 10.05
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
12:55:14,757 matplotlib.font_manager DEBUG findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Lao' (NotoSerifLao-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-Book.ttf) normal normal 400 normal>) = 10.05
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Libertine G' (LinLibertine_RI_G.ttf) italic normal 400 normal>) = 11.05
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-LightIt.ttf) italic normal 300 normal>) = 11.145
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Linux Biolinum G' (LinBiolinum_RI_G.ttf) italic normal 400 normal>) = 11.05
12:55:14,758 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-Slanted.ttf) italic normal 400 normal>) = 11.05
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Libre' (MiriamLibre-Regular.otf) normal normal 400 normal>) = 10.05
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri' (Amiri-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,759 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-Semibold.ttf) normal normal 600 normal>) = 10.24
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BoldIt.ttf) italic normal 700 normal>) = 11.335
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Frank Ruehl CLM' (FrankRuehlCLM-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans' (NotoSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Light.ttf) normal normal 300 normal>) = 10.145
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
12:55:14,760 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
12:55:14,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
12:55:14,761 matplotlib.font_manager DEBUG findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
12:55:14,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
12:55:14,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
12:55:14,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-Semibold.ttf) normal normal 600 normal>) = 10.24
12:55:14,761 matplotlib.font_manager DEBUG findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
12:55:14,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
12:55:14,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Caladea' (Caladea-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,761 matplotlib.font_manager DEBUG findfont: score(<Font 'David CLM' (DavidCLM-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-Bold.otf) normal normal 600 normal>) = 10.24
12:55:14,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
12:55:14,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
12:55:14,761 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Amiri Quran' (AmiriQuran.ttf) normal normal 400 normal>) = 10.05
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Kufi Arabic' (NotoKufiArabic-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Alef' (Alef-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Libre' (MiriamLibre-Bold.otf) normal normal 700 normal>) = 10.335
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Arabic' (NotoSansArabic-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,762 matplotlib.font_manager DEBUG findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Sans Pro' (SourceSansPro-It.ttf) italic normal 400 normal>) = 11.05
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Sans Lao' (NotoSansLao-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
12:55:14,763 matplotlib.font_manager DEBUG findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Nachlieli CLM' (NachlieliCLM-LightOblique.otf) oblique normal 300 normal>) = 11.145
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Miriam Mono CLM' (MiriamMonoCLM-BookOblique.ttf) oblique normal 400 normal>) = 11.05
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Code Pro' (SourceCodePro-BlackIt.ttf) italic normal 900 normal>) = 11.525
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
12:55:14,764 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-It.ttf) italic normal 400 normal>) = 11.05
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Source Serif Pro' (SourceSerifPro-BlackIt.ttf) italic normal 900 normal>) = 11.525
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-Regular.ttf) normal normal 400 normal>) = 10.05
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Noto Serif Georgian' (NotoSerifGeorgian-Bold.ttf) normal normal 700 normal>) = 10.335
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
12:55:14,765 matplotlib.font_manager DEBUG findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
12:55:14,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Rubik' (Rubik-Italic.ttf) italic normal 400 normal>) = 11.05
12:55:14,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
12:55:14,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
12:55:14,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
12:55:14,766 matplotlib.font_manager DEBUG findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
12:55:14,766 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=19.2 to DejaVu Sans ('C:\\dev\\cbibs\\python\\cbibs-plot\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
